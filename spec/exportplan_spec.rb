require "json"
require "selenium-webdriver"
require "rspec"
require "yaml"
require "mail"
require "pdf/reader"
require "./spec/helper.rb"
require "./spec/before.rb"
require "./spec/after.rb"
require "./spec/user.rb"
require "./spec/plan.rb"
include RSpec::Expectations

include Before
include After
include User
include Plan

describe "Export Plan" do

  setup
  
  teardown
  
  before(:all) do
    begin
      create_and_verify_user
      create_and_verify_plan
    rescue
      screen_capture
    end
  end
  
  after(:each) do
    if !example.instance_variable_get(:@exception).nil? 
      screen_capture
    end
    file = @download_dir + @properties['dmp_plan']['name'] + '.pdf' 
    FileUtils.remove file unless not File.exists?(file)
  end
  
  after(:all) do
    begin
      sign_out_user
      destroy_plan
      remove_previously_added_user('dmp_user')
    rescue
      screen_capture
    end
  end

  it "export plan as webpage" do
    win_handle = @driver.window_handle
    visit_export_page
    @driver.find_element(:link, "View as a web page").click
    sleep 3
    @driver.switch_to.window(@driver.window_handles[1])
    (@driver.find_element(:css, "h1").text).should == @properties['dmp_plan']['name']
    (@driver.find_element(:xpath, "//div[@id='export_font']/div/div/h3[6]").text).should == "Responsibilities and Resources"
    @driver.close
    @driver.switch_to.window(win_handle)
  end

  it "export plan as txt" do 
    win_handle = @driver.window_handle
    visit_export_page
    @driver.find_element(:link, "View as plain text").click
    sleep 3
    @driver.switch_to.window(@driver.window_handles[1])
    @driver.find_element(:css, "pre").text.should =~ /#{@properties['dmp_plan']['name']}/m
    @driver.find_element(:css, "pre").text.should =~ /Responsibilities and Resources/m  
    @driver.close
    @driver.switch_to.window(win_handle)
  end
  
  it "export plan as pdf with admin details" do
    visit_export_page
    @driver.find_element(:link, "With admin details").click
    reader = get_pdf
    
    # with admin details
    reader.page(1).text.gsub(/\s/,'').should include(@properties['dmp_plan']['name'].gsub(/\s/,''))
    reader.page(1).text.should include("Institution")
    # all pdfs
    reader.page(2).text.should include("Responsibilities and Resources")
    reader.page(3).text.should include("This document was generated by DMPonline") 
  end

  it "export plan as pdf without admin details" do
    visit_export_page
    @driver.find_element(:link, "Without admin details").click
    reader = get_pdf

    # without admin details
    reader.page(1).text.should_not include("Project Name")
    reader.page(1).text.should_not include("Principal Investigator/Researcher")
    reader.page(1).text.should_not include("Institution")
    # all pdfs
    reader.page(2).text.should include("Responsibilities and Resources")
    reader.page(3).text.should include("This document was generated by DMPonline")  
  end
  
  def get_pdf
    file = @download_dir + @properties['dmp_plan']['name'] + '.pdf'
    
    while(not FileTest.exist?(file))
      sleep 3
    end
    
    reader = PDF::Reader.new(file)

  end
end
