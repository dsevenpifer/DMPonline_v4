require "json"
require "selenium-webdriver"
require "rspec"
require "yaml"
require "mail"
require "pdf/reader"
require "./spec/helper.rb"
require "./spec/before.rb"
require "./spec/after.rb"
require "./spec/user.rb"
require "./spec/plan.rb"
include RSpec::Expectations

include Before
include After
include User
include Plan

describe "Export Plan" do

  setup
  
  teardown
  
  before(:all) do
    begin
      create_and_verify_user
      create_and_verify_plan
      @section_headings = get_plan_section_headings
    rescue
      screen_capture
    end
  end
  
  after(:each) do
    screen_capture
    file = @download_dir + @properties['dmp_plan']['name'] + '.pdf' 
    FileUtils.remove file unless not File.exists?(file)
  end
  
  after(:all) do
    begin
      sign_out_user
      destroy_plan
      remove_previously_added_user('dmp_user')
    rescue
      screen_capture
    end
  end

  it "export plan as webpage" do
    win_handle = @driver.window_handle
    visit_export_page
    dropdown = @driver.find_element(id: 'select-form-format')
    options=dropdown.find_elements(tag_name: 'option')
    options.each {|option| option.click if option.text == 'html' } 
    @driver.find_element(:xpath, "//input[@value='Export']").click
    sleep 3
    @driver.switch_to.window(@driver.window_handles[1])
    expect(@driver.find_element(:css, "h1").text).to eq @properties['dmp_plan']['name']
    @section_headings.each do |section| 
      expect(@driver.find_element(:class, "dmp_details").text).to include(section)
    end
    @driver.close
    @driver.switch_to.window(win_handle)
  end

  it "export plan as txt" do 
    win_handle = @driver.window_handle
    visit_export_page
   dropdown = @driver.find_element(id: 'select-form-format')
    options=dropdown.find_elements(tag_name: 'option')
    options.each {|option| option.click if option.text == 'text' }
    @driver.find_element(:xpath, "//input[@value='Export']").click
 
    sleep 3
    #@driver.switch_to.window(@driver.window_handles[1])
    #expect(@driver.find_element(:css, "pre").text).to include #{@properties['dmp_plan']['name']}
    #@section_headings.each do | section |
    #  expect(@driver.find_element(:css, "pre").text).to include(section)
    #end
    #@driver.close
    #@driver.switch_to.window(win_handle)
  end
  
  it "export plan as pdf " do
    visit_export_page
    dropdown = @driver.find_element(id: 'select-form-format')
    options=dropdown.find_elements(tag_name: 'option')
    options.each {|option| option.click if option.text == 'pdf' }
    @driver.find_element(:xpath, "//input[@value='Export']").click

    reader = get_pdf
    
    # with admin details
    expect(reader.page(1).text.gsub(/\s/,'')).to include(@properties['dmp_plan']['name'].gsub(/\s/,''))
    expect(reader.page(1).text).to include("Institution")
    # all pdfs
    @section_headings.each do | section |
      expect(contains_section( reader, section )).to be true
    end
    expect(reader.page( reader.pages.count ).text).to include("This document was generated by DMP Builder") 
  end

  
  def get_pdf
    file = @download_dir + @properties['dmp_plan']['name'] + '.pdf'
    
    while(not FileTest.exist?(file))
      sleep 3
    end
    
    reader = PDF::Reader.new(file)

  end
  
  def contains_section( reader, section )
    reader.pages.any? { |page| page.text.include? section }
  end
  
end
